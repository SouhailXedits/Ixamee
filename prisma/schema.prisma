datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id               String    @id @default(cuid())
  first_name       String?
  last_name        String?
  email            String?   @unique
  emailVerified    DateTime?
  government_id    Int
  photo            String?
  password         String?
  accounts         Account[]
  roles            Role?
  teacher          Teacher?   
  student          Student?  
}
enum Role {
  STUDENT
  TEACHER
  ADMIN
}
model Student {
  student_id       Int            @id @default(autoincrement())
  user             User           @relation(fields: [userId], references: [id])
  establishment_id Int            @unique
  establishment    Establishment  @relation(fields: [establishment_id], references: [establishment_id])
  userId           String         @unique
  rang             Int   @unique
 
}
 
model Teacher {
  teacher_id       Int              @id @default(autoincrement())
  user             User             @relation(fields: [userId], references: [id])
  userId           String           @unique
  phone_number     String?   @unique
  establishments   Establishment[]
}
 
model Establishment {
  establishment_id Int        @id @default(autoincrement())
  teacher_id       Int
  teacher          Teacher    @relation(fields: [teacher_id], references: [teacher_id])
  student          Student?
}
 
 
 
 
 
 
model Government {
  government_id Int    @id @default(autoincrement())
  name          String
}
 
 
 
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}